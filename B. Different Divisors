import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;

public class Different_Divisors {

    static int testCases;
    static long a;
    
    static BufferedReader in=new BufferedReader( new InputStreamReader( System.in ) );
    
    static long isPrime(long n){
        
        if(  n==2 || n==3 ){
            
            return n;
            
        }
        
        while(true){
            
            int y=0;
            
            for(long i=2;i<=n/2;i++){
                
                if( n%i==0 ){
                    
                    y=1;
                    
                    break;
                    
                }
                
            }
            
            if( y==0 ){
                
                return n;
                
            }
            
    n++;        
    
        }
        
        //return n;
        
    }
    
    static void solve() throws IOException{
        
        a=Long.parseLong( in.readLine() );
        
        long x=1,y,z;
          
     //   System.out.println("y sending: "+(a+1) );
        
       y=isPrime( a+1 );
        
        //System.out.println("y: "+y);
       
        z=y+a;
        
       // System.out.println("z sending: "+z);
        
       z=isPrime(z);
        
        //System.out.println("z: "+z);
       
        System.out.println(x*y*z);
        
      //  System.out.println(x+"    "+y+"    "+z+"    "+(x*y*z) );
        
    }
    
    public static void main(String[] args) throws IOException {
       
        testCases=Integer.parseInt( in.readLine() );
        
        for(int i=0;i<testCases;i++){
            
            solve();
            
        }
        
    }
    
}
/*2
1
2*/
