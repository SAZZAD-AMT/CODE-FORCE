import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.StringTokenizer;

public class B_Eastern_Exhibition {

    static Scanner scanner=new Scanner();
    
    static int testCases,n;
    
    static void merge(long a[],int left,int right,int mid){
        
        int n1=mid-left+1;
        
        int n2=right-mid;
        
        long L[]=new long[n1];
        
        long R[]=new long[n2];
        
        for(int i=0;i<n1;i++){
            
            L[i]=a[ left+i ];
            
        }
        
        for(int i=0;i<n2;i++){
            
            R[i]=a[mid+1+i];
            
        }
        
        int i=0,j=0,k=left;
        
        while( i<n1 && j<n2 ){
            
            if( L[i]<=R[j] ){
               
                a[k]=L[i];
                
                i++;
               
            }else{
                
                a[k]=R[j];
                
                j++;
                
            }
            
            k++;
            
        }
        
        while( i<n1 ){
            
            a[k]=L[i];
            
            i++;
            k++;
            
        }
        
        while( j<n2 ){
            
            a[k]=R[j];
            
            j++;
            k++;
            
        }
        
    }
    
    static void mergeSort(long a[],int left,int right){
        
        if( left>=right ){
            
            return;
            
        }
        
        int mid=(left+right)/2;
        
        mergeSort( a,left,mid );
        
       mergeSort(a,mid+1,right);
        
       merge(a,left,right,mid);
       
    }
    
    public static void main(String[] args) throws IOException {
        
        testCases=scanner.nextInt();
        
        for(int i=0;i<testCases;i++){
            
            n=scanner.nextInt();
            
            solve(n);
            
        }
        
    }

    private static void solve(int n) throws IOException {
//        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
  
long x[]=new long[n];
long y[]=new long[n];

for(int i=0;i<n;i++){
    
    x[i]=scanner.nextLong();
    
    y[i]=scanner.nextLong();
    
}

if(  n%2!=0){
    
    System.out.println("1");
    
    return;
    
}

mergeSort(x,0,x.length-1);
mergeSort(y,0,y.length-1);

long px=x[n/2]-x[n/2-1]+1,py=y[n/2]-y[n/2-1]+1;

        System.out.println( px*py );

    }
    
    static class Scanner{
        
        BufferedReader in;
        StringTokenizer st;

        public Scanner() {

            in=new BufferedReader( new InputStreamReader( System.in ) );
            
        }

        String next() throws IOException{
            
            while( st==null || !st.hasMoreElements() ){
                
                st=new StringTokenizer( in.readLine() );
                
            }
            
            return st.nextToken();
            
        }
        
        String nextLine() throws IOException{
            
            return in.readLine();
            
        }
        
        int nextInt() throws IOException{
            
            return Integer.parseInt( next() );
            
        }
        
        long nextLong() throws IOException{
            
            return Long.parseLong( next() );
            
        }
        
    }
    
}
/*

6
3
0 0
2 0
1 2
4
1 0
0 2
2 3
3 1
4
0 0
0 1
1 0
1 1
2
0 0
1 1
2
0 0
2 0
2
0 0
0 0

*/
