import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.math.BigInteger;

public class String_Mood {

    static long n;
    
    static BufferedReader in=new BufferedReader( new InputStreamReader( System.in ) );
    
    static BigInteger mod=BigInteger.valueOf(10).pow(9).add( BigInteger.valueOf(7) );
    
    static long[][] multiply(long a[][],long b[][]){
        
        long [][]product=new long[2][2];
        
        for(int i=0;i<2;i++){
            
            for(int j=0;j<2;j++){
                
                for(int k=0;k<2;k++){
                    
                    a[i][j]=a[i][j]%mod.longValue();
                    
                    b[j][k]=b[j][k]%mod.longValue();
                    
                    product[i][k]+=a[i][j]*b[j][k];
                    
                    product[i][k]=product[i][k]%mod.longValue();
                    
                }
                
            }
            
        }
        
        return product;
        
    }
    
    static void solve(){
        
        long a[][]={{19,7},{6,20}};
        
        long result[][]={ {1,0},{0,1} };
        
        while( n>0 ){
            
            if( n%2==1 ){
                
                result=multiply( result,a );
                
            }
            
            n/=2;
            
            a=multiply(a,a);
            
        }
        
        System.out.println( result[0][0]%mod.longValue() );
        
    }
    
    public static void main(String[] args) throws IOException {
        
        n=Long.parseLong( in.readLine() );
        
        solve();
        
    }
    
}
