import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.math.BigInteger;

public class Fibonacci {

    static long n;
    
    static BufferedReader in=new BufferedReader( new InputStreamReader( System.in ) );
    
    static BigInteger mod=BigInteger.valueOf(10).pow(9).add( BigInteger.valueOf(7) );
    
    static void Multiply( long [][]F,long [][]M ){
        
          F[0][0]=F[0][0]%mod.longValue();
        F[0][1]=F[1][0]%mod.longValue();
        F[1][0]=F[1][0]%mod.longValue();
        F[1][1]=F[1][1]%mod.longValue();
        
        M[0][0]=M[0][0]%mod.longValue();
        M[0][1]=M[0][1]%mod.longValue();
        M[1][0]=M[1][0]%mod.longValue();
        M[1][1]=M[1][1]%mod.longValue();
        
        long x=(F[0][0]*M[0][0])%mod.longValue()+(F[0][1]*M[1][0])%mod.longValue();
        long y=(F[0][0]*M[0][1])%mod.longValue()+(F[0][1]*M[1][1])%mod.longValue();
        long z=(F[1][0]*M[0][0])%mod.longValue()+(F[1][1]*M[1][0])%mod.longValue();
        long w=(F[1][0]*M[0][1])%mod.longValue()+(F[1][1]*M[1][1])%mod.longValue();
        
        F[0][0]=x%mod.longValue();
        F[0][1]=y%mod.longValue();
        F[1][0]=z%mod.longValue();
        F[1][1]=w%mod.longValue();
        
    }
    
    static void Power( long [][]F,long n ){
        
        if( n==0 || n==1 ){
            
            return;
            
        }
        
        long [][]M={ {1,1},{1,0} };
        
        Power( F,n/2 );
        
        Multiply(F,F);
        
        if( n%2==1 ){
            
            Multiply( F,M );
            
        }
        
    }
    
    static long solve(long n){
        
        long [][]F={ {1,1},{1,0} };
        
        if( n==0 ){
            
            return 0;
            
        }
        
        Power( F,n-1 );
        
        return F[0][0];
        
    }
    
    public static void main(String[] args) throws IOException {
        
        n=Long.parseLong( in.readLine() );
        
        System.out.println( solve(n)%mod.longValue() );
        
    }
    
}
