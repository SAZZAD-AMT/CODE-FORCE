
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.util.Arrays;
import java.util.StringTokenizer;

public class E_Lowest_Number {

    static Scanner scanner=new Scanner();
    
    static PrintWriter out=new PrintWriter(System.out);
    
    static int n;
    
    static class element implements Comparable<element> {
        
        long e;
        int pos;

        @Override
        public int compareTo(element t) {
    //        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
      
   if( this.e>t.e ){
       
       return 1;
       
   }else if( this.e<t.e ){
       
       return -1;
       
   }
    
   return 0;
   
        }
        
    }
    
    public static void main(String[] args) throws IOException {
        
        n=scanner.nextInt();
        
        element e[]=new element[n];

for(int i=0;i<n;i++){
    
    e[i]=new element();
    
}
        
        for(int i=0;i<n;i++){
            
            e[i].e=scanner.nextLong();
            e[i].pos=i;
            
        }
        
        Arrays.sort(e);
        
        out.print( e[0].e+" "+(e[0].pos+1) );
        
        out.flush();
        
    }
    
    static class Scanner{
        
        BufferedReader in;
        StringTokenizer st;

        public Scanner() {
        
            in=new BufferedReader( new InputStreamReader(System.in) );
            
        }
        
        String next() throws IOException{
            
            while( st==null || !st.hasMoreElements() ){
                
                st=new StringTokenizer(in.readLine() );
                
            }
            
            return st.nextToken();
            
        }
        
        int nextInt() throws IOException{
            
            return Integer.parseInt( next() );
            
        }
    
        long nextLong() throws IOException{
            
            return Long.parseLong( next() );
            
        }
        
        String nextLine() throws IOException{
            
            return in.readLine();
            
        }
        
        double nextDouble() throws IOException{
            
            return Double.parseDouble( next() );
            
        }
        
    }    
    
}
/*

3
1 2 3

*/

/*

5
5 6 2 3 2

*/
